[project]
name = "scene-detector"
version = "0.1.0"
description = "Add your description here"
readme = "readme.md"
requires-python = ">=3.11"
dependencies = [
    "boto3>=1.40.11",
    "confluent-kafka>=2.11.0",
    "imagehash>=4.3.2",
    "numpy>=2.3.2",
    "opentelemetry-api>=1.36.0",
    "opentelemetry-exporter-prometheus>=0.57b0",
    "opentelemetry-sdk>=1.36.0",
    "pillow>=11.3.0",
    "prometheus-client>=0.22.1",
    "pydantic-settings>=2.10.1",
    "redis>=6.4.0",
    "scenedetect[opencv]>=0.6.6",
]

[dependency-groups]
dev = [
    "dict-patterns>=0.3.0",
    "ipykernel>=6.30.1",
    "matplotlib>=3.10.5",
    "mypy>=1.17.1",
    "pytest>=8.4.1",
    "pytest-fixtures-fixtures>=0.3.4",
    "requests>=2.32.4",
    "ruff>=0.12.9",
    "testcontainers[minio]>=4.12.0",
]

[tool.ruff]
line-length = 120
exclude = [".git", ".venv"]

[tool.ruff.lint]
select = [
    "B", # flake8-bugbear
    "C4", # flake8-comprehensions
    "C90", # mccabe (we are not ready)
    "D", # pydocstyle
    "E", # pycodestyle
    "F", # pyflakes
    "FBT", # flake8-boolean-trap
    "I", # isort
    "N", # pep8-naming
    "PIE", # flake8-pie
    "PL", # pylint
    "SIM", # flake8-simplify
    "UP", # pyupgrade
    "YTT", # flake8-2020
]
ignore = [
    "D100", # Missing docstring in public module
    "D104", # Missing docstring in public package
    "D203", # One blank line before class
    "D212", # Multiline summary second line
]

[tool.ruff.lint.per-file-ignores]
"scene_detector/settings.py" = [
    "D101", # Missing docstring in public class
]
"tests/**" = [
    "B011", # Do not `assert False`
    "D100", # Missing docstring in public module
    "D101", # Missing docstring in public class 
    "D102", # Missing docstring in public method
    "D103", # Missing docstring in public function
    "D104", # Missing docstring in public package
    "D107", # Missing docstring in `__init__`
    "D203", # One blank line before class
    "D212", # Multiline summary second line
    "PLR2004", # Magic value used in comparison, consider replacing `X` with a constant variable
    "PLR0913", # Too many arguments in function definition
]
"experiments/**" = ["ALL"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["."]
